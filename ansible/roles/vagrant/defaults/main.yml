---

vagrant_version: 
vagrant_pkg: 
vagrant_checksum:
  vagrant_pkg_local: true

---
# File: main.yml - Main default variables for vagrant

## Core
vagrant_debug: false

### Package
vagrant_version: "{{ lookup('env','vagrant_VERSION') | default('0.8.7', true) }}"
vagrant_architecture_map:
  amd64: amd64
  x86_64: amd64
  armv7l: arm
  aarch64: arm64
  32-bit: "386"
  64-bit: amd64
vagrant_architecture: "{{ vagrant_architecture_map[ansible_architecture] }}"
vagrant_pkg: "vagrant_{{ vagrant_version }}_linux_{{vagrant_architecture}}.zip"
vagrant_zip_url: "https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version }}_linux_{{vagrant_architecture}}.zip"
vagrant_checksum_file_url: "https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version}}_SHA256SUMS"

### Paths
vagrant_bin_dir: "/usr/local/bin"
vagrant_config_dir: "/etc/vagrant.d"
vagrant_data_dir: "/var/vagrant"
vagrant_lockfile: "/var/lock/subsys/vagrant"
vagrant_log_dir: "/var/log/vagrant"
vagrant_run_dir: "/var/run/vagrant"

### System user and group
vagrant_manage_user: true
vagrant_user: "root"
vagrant_manage_group: false
vagrant_group: "bin"

### vagrant settings
vagrant_datacenter: "dc1"
vagrant_region: "global"
vagrant_log_level: "INFO"
vagrant_syslog_enable: true
vagrant_iface: "{{ lookup('env','vagrant_IFACE') | default(ansible_default_ipv4.interface, true) }}"
vagrant_node_name: "{{ inventory_hostname_short }}"
vagrant_node_role: "{{ lookup('env','vagrant_NODE_ROLE') | default('client', true) }}"
vagrant_leave_on_terminate: true
vagrant_leave_on_interrupt: false
vagrant_disable_update_check: false

#### Server settings
vagrant_retry_max: 0
vagrant_retry_join: false
vagrant_retry_interval: "30s"
vagrant_rejoin_after_leave: false
vagrant_enabled_schedulers:
  - service
  - batch
  - system
vagrant_num_schedulers: "{{ ansible_processor_vcpus }}"
vagrant_node_gc_threshold: "24h"
vagrant_job_gc_threshold: "4h"
vagrant_eval_gc_threshold: "1h"
vagrant_encrypt: ""

#### Client settings
vagrant_node_class: ""
vagrant_no_host_uuid: false
vagrant_max_kill_timeout: "30s"
vagrant_network_speed: 0
vagrant_cpu_total_compute: 0
vagrant_gc_interval: "1m"
vagrant_gc_disk_usage_threshold: 80
vagrant_gc_inode_usage_threshold: 70
vagrant_gc_parallel_destroys: 2
vagrant_reserved:
  cpu: "{{ vagrant_reserved_cpu | default('0', true) }}"
  memory: "{{ vagrant_reserved_memory | default('0', true) }}"
  disk: "{{ vagrant_reserved_disk | default('0', true) }}"
  ports: "{{ vagrant_reserved_ports | default('22', true) }}"
vagrant_options: {}
vagrant_meta: {}
vagrant_bootstrap_expect: "{{ vagrant_servers | count or 3 }}"

### Addresses
vagrant_bind_address: "{{ hostvars[inventory_hostname]['ansible_'+ vagrant_iface ]['ipv4']['address'] }}"
vagrant_advertise_address: "{{ hostvars[inventory_hostname]['ansible_' + vagrant_iface]['ipv4']['address'] }}"

### Ports
vagrant_ports:
  http: "{{ vagrant_ports_http | default('4646', true) }}"
  rpc: "{{ vagrant_ports_rpc | default('4647', true) }}"
  serf: "{{ vagrant_ports_serf | default('4648', true) }}"

### Servers
vagrant_group_name: "vagrant_instances"
vagrant_servers: "\
  {% if vagrant_use_consul==false %}\
    {% set _vagrant_servers = [] %}\
    {% for host in groups[vagrant_group_name] %}\
      {% set _vagrant_node_role = hostvars[host]['vagrant_node_role'] | default('client', true) %}\
      {% if ( _vagrant_node_role == 'server' or _vagrant_node_role == 'both') %}\
        {% if _vagrant_servers.append(host) %}{% endif %}\
      {% endif %}\
    {% endfor %}\
    {{ _vagrant_servers }}\
    {% else %}\
    []\
  {% endif %}"
vagrant_gather_server_facts: false

### Consul
vagrant_use_consul: false
vagrant_consul_address: "localhost:8500"
vagrant_consul_servers_service_name: "vagrant-servers"
vagrant_consul_clients_service_name: "vagrant-clients"


### ACLs
vagrant_acl_enabled: "{{ lookup('env', 'vagrant_ACL_ENABLED') | default('no', true) }}"
vagrant_acl_token_ttl: "30s"
vagrant_acl_policy_ttl: "30s"
vagrant_acl_replication_token: ""

### Vault
vagrant_vault_enabled: "{{ lookup('env', 'vagrant_VAULT_ENABLED') | default('no', true) }}"
vagrant_vault_address: "{{ vault_address | default('0.0.0.0', true) }}"
vagrant_vault_allow_unauthenticated: true
vagrant_vault_create_from_role: ""
vagrant_vault_task_token_ttl: ""
vagrant_vault_ca_file: ""
vagrant_vault_ca_path: ""
vagrant_vault_cert_file: ""
vagrant_vault_key_file: ""
vagrant_vault_tls_server_name: ""
vagrant_vault_tls_skip_verify: false
vagrant_vault_token: ""

### Docker
vagrant_docker_enable: "{{ lookup('env','vagrant_DOCKER_ENABLE') | default('false', true) }}"
vagrant_docker_dmsetup: true

### Tls
vagrant_ca_file: ""
vagrant_cert_file: ""
vagrant_key_file: ""
vagrant_verify_server_hostname: true
vagrant_verify_https_client: true
